CS452 Kernel 1 Assignment
=========================


Authors
=======
Max Chen: mqchen
Ford Peprah: hkpeprah


Unix Group
==========
In order to have read/write access to the source code as well as the ability to make and run the program, you must have a folder on the FTP with your username (e.g. /u/cs452/tftp/ARM/YOUR_USERNAME) and be one of the following users: cs452, hkpeprah, or mqchen.  Follow the steps in "Getting the Program" and "Running the Program", in order, to get yourself a copy of the code and subsequently modify/run it.


Getting the Program
=====================
To operate the program, you first need to get a copy of the code.  To do this, log into your linux account, then make a folder for the stored code, such as `cs452-microkern_mqchen_hkpeprah`, then change to that directory using `cd` and run

    git clone file:////u8/hkpeprah/cs452-microkern -b kernel1 .
                                or
    git clone file:////u7/mqchen/cs452/cs452-microkern -b kernel1 .

You should now have a working instance of our code in your current directory.  To make the application and upload it to your CS452 folder on the FTP server, run

    make upload

If you want debugging to be enabled, then run

    make debug

Otherwise, if you just want to make the application's assembly files, object code, and ELF file without uploading, then run

    make

without any arguments.  You can then run the application by following the "Running the Program" steps below.  Two existing ELF files can be found in "/u/cs452/tftp/ARM/mqchen/assn1.kern" and "/u/cs452/tftp/ARM/hkpeprah/assn1.kern", and can be downloaded for testing purposes.


Running the Program
===================
To run the application, you need to load it into the RedBoot terminal.  First, the application must be uploaded to the FTP server.  To do this, run `make upload` from the source directory (DIR/src), which will upload a copy of the assignment to your directory on the FTP server at `/u/cs452/tftp/ARM/YOUR_USERNAME/assn1.elf`.  To then run the application, move to the Redboot terminal and enter:

    load -b 0x00218000 -h 10.15.167.4 "ARM/YOUR_USERNAME/assn1.elf"; go

The execution of the user tasks begins and output is rendered to the screen.  Finally, a login prompt is displayed.  Alternatively, you can copy the generated elf file from the path at: /DIR/build


Terminal Prompt
===============
After the initial user tasks have been run in the setup process, you may log in.  After logging in, you will be presented with a prompt allowing you to enter commands.  The current supported commands are:

| ======================================================================================================================= |
| Command | Description                                                                                                   |
| ------- | ------------------------------------------------------------------------------------------------------------- |
|    q    | Quit the application.                                                                                         |
| ======================================================================================================================= |


Directory Layout
================
These are the directories that are of interest:

include     All .h files for the project live here
lib         The provided libbwio.a from A0, used for debug/output since we do not have interrupt-based I/O yet
src         Source code (.c/.s)
build       Output artifacts from make, everything is compiled into this folder
tests       Tests we wrote and ran on our kernel code

Credentials
===========
Non-root credentials exist for testing purposes, and can be entered at the login prompt to login:
    username: jobs
    password: steves
